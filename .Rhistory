library(ggplot2)
library(plotly)
library(tidyverse)
library(sf) ## Overall handling of sf objects
library(cartography) ## Plotting maps package
library(tigris) ## For downloading the zipcode map
library(shiny)
library(plotly)
## for donut plot
payment <- read_csv("payment.csv")
payment$nature.of.payment <- as.factor(payment$nature.of.payment)
runApp()
## for donut plot
payment <- read_csv("payment.csv")
summary(payment$t)
View(df)
### for box plot
df <- read_csv("open_payment_sd_2013-18.csv") # only making payment country & payment total
View(df)
# merge with jenna's df
df2 <- merge(df, payment)
# merge with jenna's df
df2 <- cbind(df, payment)
View(df2)
# remove US
df2 <- df2 %>%
filter(applicable_manufacturer_or_applicable_gpo_making_payment_country != "United States")
View(df2)
runApp('C:/Users/Owner/Downloads/Fall2022/STAT442/Asgmt 9 Shiny Wk 1/Student Code/413049-1105017 - Caleb Tangen- Oct 24, 2022 624 PM - app.R')
runApp('C:/Users/Owner/Downloads/Fall2022/STAT442/Asgmt 10 Shiny 2/Shiny Final/OpenPayment')
runApp('C:/Users/Owner/Downloads/Fall2022/STAT442/Asgmt 10 Shiny 2/Shiny Final/OpenPayment')
rm(df)
rm(df2)
library(readr)
df <- read_csv("calebpayment.csv")
View(df)
### for box plot
df <- read_csv("calebpayment.csv") # only making payment country & payment total
# merge with jenna's df
df2 <- cbind(df, payment)
# remove US
df2 <- df2 %>%
filter(applicable_manufacturer_or_applicable_gpo_making_payment_country != "United States")
### for box plot
df <- read_csv("calebpayment.csv") # only making payment country & payment total
# merge with jenna's df
df2 <- cbind(df, payment)
# remove US
df2 <- df2 %>%
filter(applicable_manufacturer_or_applicable_gpo_making_payment_country != "United States")
# rename cols
names(df2)[names(df2) == 'applicable_manufacturer_or_applicable_gpo_making_payment_country'] <- 'Applicable Manufacturer/GOP Making Payment Country'
names(df2)[names(df2) == 'covered_recipient_type'] <- 'Covered Recipient Type'
names(df2)[names(df2) == 'physician_primary_type'] <- 'Physician Primary Type'
names(df2)[names(df2) == 'form_of_payment_or_transfer_of_value'] <- 'Form of Payment or Transfer of Value'
names(df2)[names(df2) == 'third_party_payment_recipient_indicator'] <- 'Third Party Payment Recipient Indicator'
View(df2)
names(df2)[names(df2) == 'charity_indicator'] <- 'Charity Indicator'
names(df2)[names(df2) == 'related_product_indicator'] <- 'Related Product Indicator'
names(df2)[names(df2) == 'related_product_indicator'] <- 'Related Product Indicator'
names(df2)[names(df2) == 'nature.of.payment'] <- 'Nature of Payment'
names(df2)[names(df2) == 'applicable_manufacturer_or_applicable_gpo_making_payment_country'] <- 'Applicable Manufacturer/GOP Making Payment Country'
names(df2)[names(df2) == 'physician_primary_type'] <- 'Physician Primary Type'
names(df2)[names(df2) == 'form_of_payment_or_transfer_of_value'] <- 'Form of Payment or Transfer of Value'
names(df2)[names(df2) == 'charity_indicator'] <- 'Charity Indicator'
names(df2)[names(df2) == 'related_product_indicator'] <- 'Related Product Indicator'
names(df2)[names(df2) == 'nature.of.payment'] <- 'Nature of Payment'
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/Owner/Downloads/Fall2022/STAT442/Asgmt 10 Shiny 2/Shiny Final/OpenPayment')
runApp()
runApp()
runApp()
runApp()
